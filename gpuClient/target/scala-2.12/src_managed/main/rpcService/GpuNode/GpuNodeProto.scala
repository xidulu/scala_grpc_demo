// Generated by the Scala Plugin for the Protocol Buffer Compiler.
// Do not edit!
//
// Protofile syntax: PROTO3

package rpcService.GpuNode



object GpuNodeProto extends _root_.com.trueaccord.scalapb.GeneratedFileObject {
  lazy val dependencies: Seq[_root_.com.trueaccord.scalapb.GeneratedFileObject] = Seq(
  )
  lazy val messagesCompanions: Seq[_root_.com.trueaccord.scalapb.GeneratedMessageCompanion[_]] = Seq(
    rpcService.GpuNode.createFileInput,
    rpcService.GpuNode.createFileOutput,
    rpcService.GpuNode.kernelCallInput,
    rpcService.GpuNode.kernelCallOutput
  )
  private lazy val ProtoBytes: Array[Byte] =
      com.trueaccord.scalapb.Encoding.fromBase64(scala.collection.Seq(
  """Cg1HcHVOb2RlLnByb3RvEgpycGNTZXJ2aWNlIj0KD2NyZWF0ZUZpbGVJbnB1dBIUCgVmc2l6ZRgBIAEoA1IFZnNpemUSFAoFZ
  nBhdGgYAiABKAlSBWZwYXRoIiQKEGNyZWF0ZUZpbGVPdXRwdXQSEAoDbXNnGAEgASgJUgNtc2ciUQoPa2VybmVsQ2FsbElucHV0E
  hQKBWZwYXRoGAEgASgJUgVmcGF0aBISCgRmdW5jGAIgASgJUgRmdW5jEhQKBXBhcmFtGAMgASgDUgVwYXJhbSI+ChBrZXJuZWxDY
  WxsT3V0cHV0EhQKBWZwYXRoGAEgASgJUgVmcGF0aBIUCgVmc2l6ZRgCIAEoBVIFZnNpemUymwEKB0dwdU5vZGUSRwoKQ3JlYXRlR
  mlsZRIbLnJwY1NlcnZpY2UuY3JlYXRlRmlsZUlucHV0GhwucnBjU2VydmljZS5jcmVhdGVGaWxlT3V0cHV0EkcKCkNhbGxLZXJuZ
  WwSGy5ycGNTZXJ2aWNlLmtlcm5lbENhbGxJbnB1dBocLnJwY1NlcnZpY2Uua2VybmVsQ2FsbE91dHB1dGIGcHJvdG8z"""
      ).mkString)
  lazy val scalaDescriptor: _root_.scalapb.descriptors.FileDescriptor = {
    val scalaProto = com.google.protobuf.descriptor.FileDescriptorProto.parseFrom(ProtoBytes)
    _root_.scalapb.descriptors.FileDescriptor.buildFrom(scalaProto, dependencies.map(_.scalaDescriptor))
  }
  lazy val javaDescriptor: com.google.protobuf.Descriptors.FileDescriptor = {
    val javaProto = com.google.protobuf.DescriptorProtos.FileDescriptorProto.parseFrom(ProtoBytes)
    com.google.protobuf.Descriptors.FileDescriptor.buildFrom(javaProto, Array(
    ))
  }
  @deprecated("Use javaDescriptor instead. In a future version this will refer to scalaDescriptor.", "ScalaPB 0.5.47")
  def descriptor: com.google.protobuf.Descriptors.FileDescriptor = javaDescriptor
}